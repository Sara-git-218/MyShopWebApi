// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories;

#nullable disable

namespace Repositories.Migrations
{
    [DbContext(typeof(_326059268_ShopApiContext))]
    partial class _326059268_ShopApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Catgory", b =>
                {
                    b.Property<short>("CatgoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("CatgoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("CatgoryId"));

                    b.Property<string>("CatgoryName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CatgoryId");

                    b.ToTable("Catgories");
                });

            modelBuilder.Entity("Entities.Order", b =>
                {
                    b.Property<short>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("ORDER_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("OrderId"));

                    b.Property<DateOnly>("OrderDate")
                        .HasColumnType("date")
                        .HasColumnName("ORDER_DATE");

                    b.Property<int?>("OrderSum")
                        .HasColumnType("int")
                        .HasColumnName("ORDER_SUM");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("USER_ID");

                    b.HasKey("OrderId")
                        .HasName("PK_Orderss");

                    b.HasIndex("UserId");

                    b.ToTable("ORDERS");
                });

            modelBuilder.Entity("Entities.Orderitem", b =>
                {
                    b.Property<short>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("ORDER_ITEM_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("OrderItemId"));

                    b.Property<short>("OrderId")
                        .HasColumnType("smallint")
                        .HasColumnName("ORDER_ID");

                    b.Property<short>("ProductId")
                        .HasColumnType("smallint")
                        .HasColumnName("PRODUCT_ID");

                    b.Property<int?>("Quntity")
                        .HasColumnType("int")
                        .HasColumnName("QUNTITY");

                    b.HasKey("OrderItemId")
                        .HasName("PK_OrderItem");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("ORDERITEM");
                });

            modelBuilder.Entity("Entities.Product", b =>
                {
                    b.Property<short>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("ProductID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("ProductId"));

                    b.Property<short>("CatgoryId")
                        .HasColumnType("smallint")
                        .HasColumnName("CatgoryID");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short?>("Price")
                        .HasColumnType("smallint");

                    b.Property<string>("ProductDesdription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProductName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProductId");

                    b.HasIndex("CatgoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .HasColumnName("FIRSTNAME")
                        .IsFixedLength();

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .HasColumnName("LASTNAME")
                        .IsFixedLength();

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .HasColumnName("PASSWORD")
                        .IsFixedLength();

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .HasColumnName("USERNAME")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Entities.Order", b =>
                {
                    b.HasOne("Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_OrdersUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.Orderitem", b =>
                {
                    b.HasOne("Entities.Order", "Order")
                        .WithMany("Orderitems")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_OrdersitemOrderNew");

                    b.HasOne("Entities.Product", "Product")
                        .WithMany("Orderitems")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_OrdersitemOrder");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Entities.Product", b =>
                {
                    b.HasOne("Entities.Catgory", "Catgory")
                        .WithMany("Products")
                        .HasForeignKey("CatgoryId")
                        .IsRequired()
                        .HasConstraintName("FK_PRoductCatgory");

                    b.Navigation("Catgory");
                });

            modelBuilder.Entity("Entities.Catgory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Entities.Order", b =>
                {
                    b.Navigation("Orderitems");
                });

            modelBuilder.Entity("Entities.Product", b =>
                {
                    b.Navigation("Orderitems");
                });

            modelBuilder.Entity("Entities.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
